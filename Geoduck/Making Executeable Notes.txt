20190731

Changes I have made today.

	Program is built on Python3.7, 32 bit
		No work beyond building a new environment in Anaconda.
		Python 3.4 was going to be unsupported in March 2020
		
	Changed from PyQt4 to PyQt5
		PyQt5 has a different structure to its library.  I had to change the way I imported some of the PyQt libraries.  I had to change the way I called some of the PyQt libraries.
		No real changes to the code.
		PyQt4 was unsupported.
		
	Executeable is is built with pyInstaller
	
		Unfortunately that seems to preclude a batch command for the process so here are the instructions:
			Open a command-window for 32-bit Anaconda
			Go to the python37 environment: activate python37
			Navigate to the directory with the GAP.py
			Issue the following command:
			
				pyinstaller -F --noupx --clean GAP.py -p D:\Coding\AnalysisPrograms2013\Fossil\working\common -p D:\Coding\AnalysisPrograms2013\Fossil\working\libraries 
				
				I would like to force the following binaries into the package - but pyinstaller tells me they do not exist.
				--add-binary D:\Coding\AnalysisPrograms2013\Fossil\working\libraries\ACEDAO.DLL --add-binary D:\Coding\AnalysisPrograms2013\Fossil\working\libraries\MSACC.OLB
				
	This creates, what I hope is a stand-alone executeable file.  According to log-files, it is getting the adodb libraries.
	
	If the executeable is stand-alone, I don't anticipate a need for an installation-file.  I just put the executable on the network.
	There is the possibility that people have a comfort with installation files - in that case I will have to figure out how I want to create them.
				